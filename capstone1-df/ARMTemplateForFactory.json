{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "capstone1-df"
		},
		"bronze_datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'bronze_datalake'"
		},
		"DataBricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0929-094342-hy0yzpq2"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://capstone1-keyvault.vault.azure.net/"
		},
		"bronze_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://capstone1bronzelake.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_if_file_exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "http_raw_dataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:05:30",
							"sleep": 10
						}
					},
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "check_if_file_exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "http_raw_dataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "if_all_good",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Get Metadata').output.columnCount, 10 )\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "source_incorrect",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "send_copy_fail_msg",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": "Source is not correct",
										"errorCode": "400"
									}
								},
								{
									"name": "send_copy_fail_msg",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://prod-88.eastus.logic.azure.com:443/workflows/8b821113e3634182bf3f29544a569edb/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=PyRaHMRy6A0jsQwboJQ5nMj2uBMJGMwb99bWA-MEv2o",
										"body": {
											"value": "@json(concat('{',\n  '\"subject\":\"ADF Pipeline Failed!\",',\n  '\"body\":\"Pipeline: ', pipeline().Pipeline, '<br>',\n  'Column Count: Expected 30 but got ', string(activity('Get Metadata').output.columnCount), '\"',\n'}'))\n",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Source_To_Bronze",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.07:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "http_raw_dataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "bronze_raw",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "send_copy_success_msg",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Source_To_Bronze",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://prod-88.eastus.logic.azure.com:443/workflows/8b821113e3634182bf3f29544a569edb/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=PyRaHMRy6A0jsQwboJQ5nMj2uBMJGMwb99bWA-MEv2o",
										"body": {
											"value": "@json(concat(\n  '{',\n    '\"subject\":\"ADF Pipeline Execution Completed Successfully\",',\n    '\"body\":\"',\n      'The ADF pipeline execution has completed successfully with the following details:<br>',\n      'Pipeline Name: ', pipeline().Pipeline, '<br>',\n      'Copy Activity: ', activity('Source_To_Bronze').ActivityType, '<br>',\n      'Status: ', activity('Source_To_Bronze').Status, '<br>',\n      'Source File Name: ', activity('Get Metadata').output.itemName, '<br>',\n      'Destination: Bronze Data Lake<br>',\n      'Column Count: ', string(activity('Get Metadata').output.columnCount), '<br>',\n      'File Size (Bytes): ', string(activity('Get Metadata').output.size), '<br>',\n      'Data Read (Bytes): ', string(activity('Source_To_Bronze').output.dataRead), '<br>',\n      'Data Written (Bytes): ', string(activity('Source_To_Bronze').output.dataWritten),\n    '\"',\n  '}'\n))\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "source_not_present",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "check_if_file_exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Source not present",
							"errorCode": "400"
						}
					},
					{
						"name": "send_source_not_found_msg",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "check_if_file_exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-88.eastus.logic.azure.com:443/workflows/8b821113e3634182bf3f29544a569edb/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=PyRaHMRy6A0jsQwboJQ5nMj2uBMJGMwb99bWA-MEv2o",
							"body": {
								"value": "@json(concat('{',\n  '\"subject\":\"ADF Pipeline Failed! <br>\",',\n  '\"body\":\"Pipeline: ', pipeline().Pipeline, ' Failed as Source is not present\"',\n'}'))\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/http_raw_dataset')]",
				"[concat(variables('factoryId'), '/datasets/bronze_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bronze_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bronze_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/http_raw_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bronze_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Electric_Vehicle_Population_Data.csv",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bronze_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataBricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3985942142683772.12.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databricks-access-token"
					},
					"existingClusterId": "[parameters('DataBricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('bronze_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('bronze_datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}